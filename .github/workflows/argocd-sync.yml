name: ArgoCD Sync

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types: [completed]
    branches: [main]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

jobs:
  argocd-sync:
    name: Trigger ArgoCD Sync
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}

    - name: Install ArgoCD CLI
      run: |
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
        rm argocd-linux-amd64

    - name: Login to ArgoCD
      run: |
        # Get ArgoCD server info
        ARGOCD_SERVER=$(kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        echo "ArgoCD Server: $ARGOCD_SERVER"
        
        # Login to ArgoCD (you'll need to set up admin password)
        # argocd login $ARGOCD_SERVER --username admin --password ${{ secrets.ARGOCD_PASSWORD }}

    - name: Sync Applications
      run: |
        echo "Syncing ArgoCD applications..."
        # argocd app sync billing-backend
        # argocd app sync billing-frontend
        echo "ArgoCD sync completed"

    - name: Notify ArgoCD Sync
      run: |
        echo "ðŸš€ ArgoCD sync triggered for successful CI build"
        echo "Applications will be automatically deployed to EKS"
